name: target CI
# runs-on: self-hosted

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: tests-on-host-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build:
    # runs-on: ubuntu-latest
    runs-on: self-hosted

    steps:
    - name: Clean Workspace
      shell: bash
      run: |
        echo "Cleaning workspace directory..."
        rm -rfv ${{ github.workspace }}
        mkdir -p ${{ github.workspace }}
    - name: Checkout repository
      uses: actions/checkout@v3

      # with:
      #   submodules: 'true'

    - name: fetch submodules
      run: |
        git submodule sync
        git submodule update --init --recursive

    - name: check_env
      run: cd bike_computer_v3 && ls

    - name: cmake
      run: cd bike_computer_v3 && make cmake L=1

    - name: make
      run: cd bike_computer_v3 && make all

  warnings:
    needs: [build]
    runs-on: self-hosted
    steps:
    - name: check_log
      run: cd bike_computer_v3 && make warnings

  test_target:
    needs: [build]
    runs-on: self-hosted
    steps:
    - name: run local
      run: cd bike_computer_v3 && make ctest



  #==========================================================================
  #                              HOST
  #==========================================================================


  build_host:
    needs: [test_target, warnings]
    runs-on: self-hosted
    if: success() || failure()
    steps:
    - name: clean
      run: cd bike_computer_v3 && make clean

    - name: build cmake for host
      run: cd bike_computer_v3 && make cmake H=1

    - name: build host
      run: cd bike_computer_v3 && make all


  test_host:
    needs: [build_host]
    runs-on: self-hosted
    steps:
    - name: run tests on host
      run: cd bike_computer_v3 && make ctest



  # build_test_host:
  #   # needs: [build]
  #   # runs-on: ubuntu-latest
  #   runs-on: self-hosted
  #   steps:
  #   # - name: download pico-sdk
  #   #   uses: actions/checkout@master
  #   #   with:
  #   #     repository: raspberrypi/pico-sdk
  #   #     path: ./pico-sdk
  #   #     submodules: 'true'
  #   #     # recursive

  #   # - name: export path
  #   #   run: ls /tmp && ls && pwd && export PICO_SDK_PATH=./pico-sdk $$ echo $PICO_SDK_PATH

  #   - name: Checkout repository
  #     uses: actions/checkout@v3
  #     with:
  #       submodules: 'true'

  #   - name: build cmake for host
  #     run: cd bike_computer_v3 && make cmake_host

  #   - name: build host
  #     run: cd bike_computer_v3 && make host


  # test_host:
  #   needs: [build_test_host]
  #   runs-on: self-hosted
  #   steps:
  #   - name: run tests on host
  #     run: cd bike_computer_v3 && make test_host

